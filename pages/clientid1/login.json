{
  "page": "PCFET0NUWVBFIGh0bWw+CjxodG1sPgoKPGhlYWQ+CiAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4KICA8c3R5bGU+CiAgICBib2R5IHsKICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICB9CgogICAgZm9ybSB7CiAgICAgIGJvcmRlcjogM3B4IHNvbGlkICNmMWYxZjE7CiAgICB9CgogICAgaW5wdXRbdHlwZT10ZXh0XSwKICAgIGlucHV0W3R5cGU9cGFzc3dvcmRdIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIHBhZGRpbmc6IDEycHggMjBweDsKICAgICAgbWFyZ2luOiA4cHggMDsKICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgfQoKICAgIGJ1dHRvbiB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwNEFBNkQ7CiAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgcGFkZGluZzogMTRweCAyMHB4OwogICAgICBtYXJnaW46IDhweCAwOwogICAgICBib3JkZXI6IG5vbmU7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CgogICAgYnV0dG9uOmhvdmVyIHsKICAgICAgb3BhY2l0eTogMC44OwogICAgfQoKICAgIC5jYW5jZWxidG4gewogICAgICB3aWR0aDogYXV0bzsKICAgICAgcGFkZGluZzogMTBweCAxOHB4OwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2OwogICAgfQoKICAgIC5pbWdjb250YWluZXIgewogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIG1hcmdpbjogMjRweCAwIDEycHggMDsKICAgIH0KCiAgICBpbWcuYXZhdGFyIHsKICAgICAgd2lkdGg6IDQwJTsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgfQoKICAgIC5jb250YWluZXIgewogICAgICBwYWRkaW5nOiAxNnB4OwogICAgfQoKICAgIHNwYW4ucHN3IHsKICAgICAgZmxvYXQ6IHJpZ2h0OwogICAgICBwYWRkaW5nLXRvcDogMTZweDsKICAgIH0KCiAgICAvKiBDaGFuZ2Ugc3R5bGVzIGZvciBzcGFuIGFuZCBjYW5jZWwgYnV0dG9uIG9uIGV4dHJhIHNtYWxsIHNjcmVlbnMgKi8KICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMwMHB4KSB7CiAgICAgIHNwYW4ucHN3IHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBmbG9hdDogbm9uZTsKICAgICAgfQoKICAgICAgLmNhbmNlbGJ0biB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIH0KICAgIH0KICA8L3N0eWxlPgogIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8zLjYuMy9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICA8c2NyaXB0PgogICAgJChmdW5jdGlvbiAoKSB7CiAgICAgICQoImZvcm0iKS5vbigic3VibWl0IiwgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKCiAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZXZlbnQudGFyZ2V0KTsKICAgICAgICBjb25zdCBteV9mb3JtID0gT2JqZWN0LmZyb21FbnRyaWVzKGZvcm1EYXRhLmVudHJpZXMoKSk7CgogICAgICAgICQuYWpheCh7CiAgICAgICAgICB1cmw6ICIjdXJsIyIsCiAgICAgICAgICB0eXBlOiAiUE9TVCIsCiAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShteV9mb3JtKSwKICAgICAgICAgIGNvbnRlbnRUeXBlOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLAogICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEsIHRleHRTdGF0dXMsIGpxWEhSKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRleHRTdGF0dXMgKyAiOiAiICsganFYSFIuc3RhdHVzKTsKICAgICAgICAgICAgaWYgKGpxWEhSLnN0YXR1cyA9PT0gMjA0KSB7CiAgICAgICAgICAgICAgICQoIiNyZXN1bHQiKS5odG1sKCJVc2VyIG5vdCBmb3VuZCIpOwogICAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgICAgJCgiI3Jlc3VsdCIpLmh0bWwoZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikgewogICAgICAgICAgICBjb25zb2xlLmxvZyh0ZXh0U3RhdHVzICsgIjogIiArIGpxWEhSLnN0YXR1cyArICIgIiArIGVycm9yVGhyb3duKTsKICAgICAgICAgIH0KICAgICAgICB9KQoKICAgICAgfSk7CiAgICB9KTsKICA8L3NjcmlwdD4KPC9oZWFkPgoKPGJvZHk+CgogIDxoMj5Mb2dpbiBGb3JtPC9oMj4KCiAgPGZvcm0+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8bGFiZWwgZm9yPSJlbWFpbCI+PGI+RW1haWw8L2I+PC9sYWJlbD4KICAgICAgPGlucHV0IHR5cGU9InRleHQiIHBsYWNlaG9sZGVyPSJFbnRlciBVc2VybmFtZSIgbmFtZT0iZW1haWwiIHJlcXVpcmVkPgoKICAgICAgPGxhYmVsIGZvcj0icHN3Ij48Yj5QYXNzd29yZDwvYj48L2xhYmVsPgogICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJFbnRlciBQYXNzd29yZCIgbmFtZT0icGFzc3dvcmQiIHJlcXVpcmVkPgoKICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiPkxvZ2luPC9idXR0b24+CiAgICAgIDxsYWJlbD4KICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGNoZWNrZWQ9ImNoZWNrZWQiIG5hbWU9InJlbWVtYmVyIj4gUmVtZW1iZXIgbWUKICAgICAgPC9sYWJlbD4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6I2YxZjFmMSI+CiAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2FuY2VsYnRuIj5DYW5jZWw8L2J1dHRvbj4KICAgICAgPHNwYW4gY2xhc3M9InBzdyI+Rm9yZ290IDxhIGhyZWY9IiMiPnBhc3N3b3JkPzwvYT48L3NwYW4+CiAgICA8L2Rpdj4KICA8L2Zvcm0+CiAgPGRpdiBpZD0icmVzdWx0Ij48L2Rpdj4KPC9ib2R5PgoKPC9odG1sPg=="
}